1. for $country in //country
return
<result>
  <country>{$country/name/text()}</country>
  <capital>{$country/city[@id = $country/@capital]/name/text()}</capital>
  <population>{$country/@population}</population>
    </result>

2. for $country in //country
where count($country/border) >= 5
return $country/name/text()

3. //country[count(religions)>3]/@name

4. for $country in //country[religions = 'Buddhist']
order by $country/population ascending
return $country/name/text()

5. <resultado>
{
    for $country in doc('factbook')/mondial/country
    where count(distinct-values($country/encompassed/@continent)) >= 2
    let $countryName := $country/name
    order by $countryName
    return
    <nombrePais>{$countryName}{
        for $continentId in distinct-values($country/encompassed/@continent)
        let $continent := doc('factbook')/mondial/continent[@id = $continentId]/@name
        order by $continent
        return
        <nombreContinente nombre="{$continent}" porcentaje="{$country/encompassed[@continent = $continentId]/@percentage}"/>
    }</nombrePais>
}
</resultado>

6. for $city in doc('factbook')/mondial/country/city
let $cityName := $city/name/text()
let $population := $city/population[@year = max($city/population/@year)]/text()
let $country := $city/../name/text()
order by number($population) descending
return <ciudad nombre="{$cityName}" poblacion="{$population}" pais="{$country}"/>

7 .//country[border/@country = 'f0_1432']/@name

8. //country[count(religions)>3]/@name

9. for $province in //province[@country = 'f0_777']
where $province/city/located_at/@type = 'sea' or $province/city/located_at/@type = 'lake'
return $province/city/name/text()

10. //country[@population > 20000000 and @total_area < 100000]/name/data()

11. //city[located_at[@type='lake']]/name/text()

12. <countries>
{
    for $country in //country
    order by $country/population descending
    return
    <country name="{$country/name/text()}">
        <cities>
        {
            for $city in $country/city
            order by $city/population descending
            return
            <city name="{$city/name/text()}">
                <population>{$city/population/text()}</population>
            </city>
        }
        </cities>
        <languages>
        {
            for $language in $country/languages
            return
            <language name="{$language/text()}">
                <percentage>{$language/@percentage}</percentage>
            </language>
        }
        </languages>
    </country>
}
</countries>

13. <idiomas>
{
    for $language in distinct-values(//languages)
    order by $language
    return <idioma>{$language}</idioma>
}
</idiomas>

14. //country[@name = 'Italy']/province/@name

15. //country[count(languages) > 5]/@name

16. //river[to/@type = 'river']/@name

17. //country[@name = 'Switzerland']/province/city[@located_at/@type = 'lake']/name/data()

18.for $ciudades in //city
where $ciudades/population > 6000000 and $ciudades/located_at[@type='river']
return $ciudades/name/data()

19.//country[number(@inflation) > 70]/@name/data()

20. //country[encompassed/@continent = 'f0_123' and encompassed/@continent= 'f0_119' ]/name

21. for $organization in doc('factbook')//organization
where contains($organization/@name, 'United Nations')
for $member in $organization/members/@country
let $memberId := $member
return doc('factbook')//country[@id = $memberId]/name/text()

22. //country[@name='Mauritania']/city/locate_at[type='desert']/name

23. let $caribbeanCountry := doc('factbook')//sea[contains(@name, 'Caribbean Sea')]/located/@country
for $island in doc('factbook')//island
where $island/located/@country = $caribbeanCountry
return $island/@name

24. distinct-values(//country[@population > 50000000]/@government)

25. //river[../country/@continent = 'Africa']

26. max(//country[@name="Spain"]/province/city/population)

27. //country[@name='Spain']/province/city[population=max(//country[@name="Spain"]/province/city/population)]/name/data()